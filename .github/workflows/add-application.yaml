name: Add new application

on:
  workflow_dispatch:
    inputs:
      app_repo:
        description: 'Application repistory'
        required: true
      cluster_name:
        description: 'Cluster name'
        required: false

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    # skip this for now
    env:
      CLUSTER_NAME : ${{inputs.cluster_name}}
      APP_REPO : ${{inputs.app_repo}}
    steps:
      - name: Validate cluster
        run: echo "Validating $CLUSTER_NAME"
      - name: Validate repository
        run: echo "Validating $APP_REPO"

  create-argo-app:
    runs-on: ubuntu-latest
    needs: 
      - validate-inputs
    env:
      CLUSTER_NAME : ${{inputs.cluster_name}}
      APP_REPO : ${{inputs.app_repo}}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: create argo app
        run: |
          # this assumes the endpoint is https:///
          APP_NAME=$(echo "$APP_REPO" | cut -d / -f 5 | sed 's/\.git//' )

          cp ./templates/argo-app.yaml ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml
          
          # replace {clusterName}
          sed "s/{clusterName}/$CLUSTER_NAME/g" -i ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml

          # replace {appName}
          sed "s/{appName}/$APP_NAME/g" -i ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml

      # TODO: commit the changes
      - name: Commit changes
        uses: actions/superpowerful-action

  # change the name
  copy-over-ci:
  # what auth should we use
    runs-on: ubuntu-latest
    needs:
      - validate-inputs
    steps:
      - name: Checkout gitops repo
        uses: actions/checkout@v4
        with:
          path: gitops

      - name: Check app repository code
        uses: actions/checkout@v4
        with:
          repository: $app_repo
          path: app
          token: place your token here
      
      - name: commit workflow, docker file, and charts
        env:
          APP_REPO : ${{inputs.app_repo}}
        run: |
          cp gitops/templates/Dockerfile app/Dockerfile

          # TODO create the directory if it doesn't exist
          mkdir -p app/.github/workflows
          cp gitops/templates/actions/publish-image.yaml app/.github/workflows/publish-image.yaml
          cp gitops/templates/actions/publish-chart.yaml app/.github/workflows/publish-chart.yaml

          mkdir -p "app/charts/$APP_NAME"
          cp -r gitops/charts "app/charts/$APP_NAME"

      
      - name: make a commit or PR
        run: |
          # make the commit
