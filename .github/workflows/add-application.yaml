name: Add new application

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'Application repository name'
        required: true
        default: 'zippy2'
      cluster_name:
        description: 'Cluster name'
        default: 'show-me-the-minutes'
        required: true
  push:
    branches:
      main

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    # skip this for now
    env:
      CLUSTER_NAME : ${{inputs.cluster_name}}
      APP_NAME : ${{inputs.app_name}}
    steps:
      - name: Validate cluster
        run: echo "Validating $CLUSTER_NAME"
      - name: Validate app name
        run: echo "Validating $APP_NAME"

  # change the name
  copy-over-ci:
  # what auth should we use
    runs-on: ubuntu-latest
    # needs:
    #   - validate-inputs
    steps:
      - name: get repo url
        env:
          APP_NAME: ${{inputs.app_name}}
        id: get_repo_url
        run: |
          echo "repo_url=https://github.com/kubefirst-demo-bot/$APP_NAME" >> $GITHUB_OUTPUT


      - name: Checkout gitops repo
        uses: actions/checkout@v4
        with:
          path: gitops

      - name: Check app repository code
        uses: actions/checkout@v4
        with:
          repository: ${{steps.get_repo_url.outputs.repo_url}}
          path: app
          token: ${{secrets.KBOT_TOKEN}}
      

      - name: create workflow, docker file, and charts
        env:
          APP_NAME: ${{inputs.app_name}}
          CLUSTER_NAME: ${{inputs.cluster_name}}
        run: |
          cd ./app 
          ls -la 
          cd ../gitops
          ls -la

      #     APP_NAME=$(echo "$APP_NAME" | cut -d / -f 5 | sed 's/\.git//' )

      #     cp gitops/templates/Dockerfile app/Dockerfile

      #     # TODO create the directory if it doesn't exist
      #     mkdir -p app/.github/workflows
      #     cp gitops/templates/actions/publish-image.yaml app/.github/workflows/publish-image.yaml
      #     # replace {clusterName}
      #     sed "s/{clusterName}/$CLUSTER_NAME/g" -i app/.github/workflows/publish-image.yaml
      #     sed "s/{appName}/$APP_NAME/g" -i app/.github/workflows/publish-image.yaml

      #     cp gitops/templates/actions/publish-chart.yaml app/.github/workflows/publish-chart.yaml
      #     sed "s/{clusterName}/$CLUSTER_NAME/g" -i app/.github/workflows/publish-chart.yaml
      #     sed "s/{appName}/$APP_NAME/g" -i app/.github/workflows/publish-chart.yaml

      #     mkdir -p "app/charts/$APP_NAME"
      #     cp -r gitops/templates/charts/* "app/charts/$APP_NAME/"

      
      # - name: Commit and push changes
      #   env:
      #     # TOKEN needs to be update
      #     GITHUB_TOKEN: ${{ secrets.KBOT_TOKEN }}
      #     CLUSTER_NAME : ${{inputs.cluster_name}}
      #     APP_NAME : ${{inputs.app_name}}
      #   run: |
      #     APP_NAME=$(echo "$APP_NAME" | cut -d / -f 5 | sed 's/\.git//' )
          
      #     cd ./app
      #     git config user.name "github-actions[bot]"
      #     git config user.email "general@konstruct.io"
      #     git add --all
      #     git commit -m "add $APP_NAME in $CLUSTER_NAME" || echo "No changes to commit"
      #     git push origin HEAD







# create-argo-app:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     needs: 
#       - validate-inputs
#     env:
#       CLUSTER_NAME : ${{inputs.cluster_name}}
#       APP_NAME : ${{inputs.app_name}}
#     steps:
#       - name: Check out repository code
#         uses: actions/checkout@v4
      
#       - name: create argo app
#         run: |
#           # this assumes the endpoint is https:///
#           APP_NAME=$(echo "$APP_NAME" | cut -d / -f 5 | sed 's/\.git//' )

#           cp ./templates/argo-app.yaml ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml
          
#           # replace {clusterName}
#           sed "s/{clusterName}/$CLUSTER_NAME/g" -i ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml

#           # replace {appName}
#           sed "s/{appName}/$APP_NAME/g" -i ./registry/clusters/${CLUSTER_NAME}/${APP_NAME}.yaml

#       - name: Commit and push changes
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           CLUSTER_NAME : ${{inputs.cluster_name}}
#           APP_NAME : ${{inputs.app_name}}
#         run: |
#           APP_NAME=$(echo "$APP_NAME" | cut -d / -f 5 | sed 's/\.git//' )

#           git config user.name "github-actions[bot]"
#           git config user.email "general@konstruct.io"
#           git add --all
#           git commit -m "[skip-ci] add $APP_NAME in $CLUSTER_NAME" || echo "No changes to commit"
#           git push origin HEAD
