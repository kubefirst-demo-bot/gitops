name: Publish image and helm chart to ECR
on: 
  workflow_dispatch:
  push:
    branches:
      main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: "us-east-2"
  # update role ARN
  ASSUME_ROLE_ARN: "arn:aws:iam::126827061464:role/github-action-oidc-pass-app-repo"

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract and print just the repository name
        id: extract-repo-name
        run: echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: get-helm
        run: |
          wget https://get.helm.sh/helm-v3.16.2-linux-amd64.tar.gz
          tar xvf helm-v3.16.2-linux-amd64.tar.gz
          
          alias helm="$(pwd)/linux-amd64/helm"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ env.ASSUME_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.extract-repo-name.outputs.repo_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # fix github.author user to be dyanmic
          SHORT_SHA=$(echo "$IMAGE_TAG" | cut -c1-7)
          docker build -t $ECR_REGISTRY/kubefirst-demo-bot/$ECR_REPOSITORY:$SHORT_SHA .
          docker push $ECR_REGISTRY/kubefirst-demo-bot/$ECR_REPOSITORY:$SHORT_SHA

      - name: build-chart
        run: |
          cd charts/{appName}
          helm package .

      - name: push-chart-to-ecr
        id: publish-chart
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        run: |
          cd charts/{appName}
          
          CHART_NAME=$(cat Chart.yaml | grep "^name" | cut -f 2 -d " ")
          CHART_VERSION=$(cat Chart.yaml | grep "^version" | cut -f 2 -d " ")
          CHART_ARCHIVE_FILE="$CHART_NAME"-"$CHART_VERSION".tgz

          helm push "$CHART_ARCHIVE_FILE" "oci://$ECR_REGISTRY/kubefirst-demo-bot/charts"

          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_OUTPUT


  # update-{clusterName}:
  #   name: "update-chart-{clusterName}"
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - publish-image
  #   env:
  #     ECR_REGISTRY: ${{ needs.publish-image.outputs.registry }}
  #     IMAGE_TAG: ${{ github.sha }}
  #   steps:
  #     - name: print-version
  #       run: echo "Updating paas-api chart to $IMAGE_TAG"
      
  #     - name: checkout-gitops
  #       uses: actions/checkout@v4
  #       with:
  #         # TODO: remove hardcoded gitops repo
  #         repository: "kubefirst-demo-bot/gitops"
  #         ref: main
  #         token: ${{ secrets.KBOT_TOKEN }}         
                      
  #     - name: update-image-tag
  #       run: |
  #         sed "s/repository:.*/repository: $ECR_REGISTRY\/{appName}/" -i registry/clusters/{clusterName}/{appName}.yaml
  #         sed "s/tag:.*/tag: $IMAGE_TAG/" -i registry/clusters/{clusterName}/{appName}.yaml
  #         sed "s/{ecr_repo}/tag: $IMAGE_TAG/" -i registry/clusters/{clusterName}/{appName}.yaml
  #         sed "s/{image_tag}/$ECR_REGISTRY/" -i registry/clusters/{clusterName}/{appName}.yaml

  #     - name: configure-git
  #       run: |
  #         git config --global user.email "konstruct-bot@konstruct.io"
  #         git config --global user.name "konstruct-bot"

  #     - name: commit-and-push
  #       run: |
  #         # TODO change the cluster name
  #         git add   registry/clusters/{clusterName}/{appName}.yaml
  #         git commit -m "[skip ci]: upgrade {appName} chart to $IMAGE_TAG in {clusterName}"

  #         git push origin main
          
  #         git push origin main
          